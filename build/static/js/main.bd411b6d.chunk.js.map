{"version":3,"sources":["components/UI/navbar/Navbar.module.css","components/UI/modal/Modal.module.css","components/UI/button/Button.module.css","components/UI/input/Input.module.css","components/UI/select/Select.module.css","components/UI/loader/Loader.module.css","components/UI/button/Button.jsx","context/index.js","components/UI/navbar/Navbar.jsx","hooks/usePosts.js","hooks/useFetching.js","utils/pages.js","API/PostServise.js","components/PostItem.jsx","components/PostList.jsx","components/UI/input/Input.jsx","components/PostForm.jsx","components/UI/select/Select.jsx","components/PostFilter.jsx","components/UI/modal/Modal.jsx","components/UI/loader/Loader.jsx","components/UI/pagination/Pagination.jsx","hooks/usePagination.js","pages/PostsPage.jsx","components/Counter.jsx","components/PostComments.jsx","routes/index.js","hooks/useObserver.js","pages/PostIdPage.jsx","pages/Login.jsx","pages/CounterPage.jsx","pages/ErrorPage.jsx","components/AppRouter.jsx","App.js","index.js"],"names":["module","exports","Button","children","props","className","style","btn","AuthContext","createContext","Navbar","useContext","setIsAuth","isAuth","navbar","onClick","localStorage","removeItem","navbar__links","navbar__item","to","usePosts","posts","sort","query","sortedPosts","useMemo","a","b","localeCompare","useSortedPosts","filter","post","title","toLowerCase","includes","useFetching","callback","useState","isLoading","setIsLoading","error","setError","message","getPageCount","totalCount","limit","Math","ceil","PostServise","page","axios","get","params","_limit","_page","response","console","log","id","border","color","PostItem","remove","router","useHistory","body","push","PostList","topic","length","TransitionGroup","map","CSSTransition","timeout","classNames","Input","forwardRef","ref","input","PostForm","create","initialPost","setPost","setId","handleChange","e","currentTarget","name","value","type","placeholder","onChange","preventDefault","newPost","Select","options","defaultValue","target","select","disabled","option","PostFilter","setFilter","selectedSort","Modal","visible","setVisible","rootClasses","Modal__backdrop","active","join","Modal__content","stopPropagation","Loader","loader","Pagination","totalPages","changePages","pagesArray","result","i","usePagination","p","btn_add","margin","Post","Counter","count","setCount","PostComments","comments","comment","email","privateRoutes","path","component","setPosts","modal","setModal","setTotalPages","setLimit","setPage","lastElem","useRef","useEffect","fetchPosts","sortedAndSearchedPosts","getAll","data","headers","postErr","canLoad","observer","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","useObserver","remPost","exact","useParams","setComments","PostService","getById","fetchPostById","getCommentsById","resp","fetchComments","isCommentLoading","publicRoutes","onSubmit","setItem","AppRouter","r","App","getItem","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd411b6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__lgY2h\",\"navbar__links\":\"Navbar_navbar__links__1B7sk\",\"navbar__item\":\"Navbar_navbar__item__2n3Y1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal__backdrop\":\"Modal_Modal__backdrop__3ZAYt\",\"active\":\"Modal_active__2nEsc\",\"Modal__content\":\"Modal_Modal__content__25TR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__k_9sL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__1l0Zd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__WlNKI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__RvqE0\",\"rotate\":\"Loader_rotate__jtwmg\"};","import React from 'react';\r\nimport style from './Button.module.css'\r\n\r\nconst Button = ({ children, ...props }) => {\r\n    return ( \r\n        <button {...props} className={style.btn} >\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n \r\nexport default Button ;","import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext(null);","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport style from './Navbar.module.css';\r\nimport Button from '../button/Button';\r\nimport {AuthContext} from '../../../context';\r\n\r\nconst Navbar = () => {\r\n  const { isAuth, setIsAuth } = useContext(AuthContext);\r\n  const logout = () => {\r\n    setIsAuth(false);\r\n    localStorage.removeItem('auth');\r\n  }\r\n\r\n    return ( \r\n      <div className={style.navbar} >\r\n          <Button onClick={logout} >Logout</Button>\r\n        <div className={style.navbar__links} >\r\n          <Link className={style.navbar__item} to=\"/login\">Login</Link>\r\n          <Link className={style.navbar__item} to=\"/posts\">Posts</Link>\r\n          <Link className={style.navbar__item} to=\"/count\">Counter</Link>\r\n        </div>\r\n\r\n      </div>\r\n     );\r\n}\r\n \r\nexport default Navbar;","import {useMemo} from 'react';\r\n\r\nconst useSortedPosts = (posts, sort) => {\r\n  const sortedPosts = useMemo(() => {\r\n      if (sort === \"id\") {\r\n      return [...posts].sort()\r\n      }\r\n      if (sort) {\r\n      return [...posts].sort((a, b) => a[sort].localeCompare(b[sort])) \r\n      }\r\n      return posts;\r\n  }, [sort, posts]);\r\n    \r\n    return sortedPosts;\r\n};\r\n\r\nexport const usePosts = (posts, sort, query) => {\r\n    const sortedPosts = useSortedPosts(posts, sort);\r\n\r\n    const sortedAndSearchedPosts = useMemo(() =>\r\n        sortedPosts.filter(post => post.title.toLowerCase().includes(query.toLowerCase())),\r\n        [query, sortedPosts]);\r\n    \r\n    return sortedAndSearchedPosts;\r\n};","import {useState} from 'react';\r\n\r\nexport const useFetching = (callback) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const fetching = async() => {\r\n        try {\r\n            setIsLoading(true);\r\n            await callback();\r\n        } catch (error) {\r\n            setError(error.message)\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return [fetching, isLoading, error];\r\n}","export const getPageCount = (totalCount, limit) => Math.ceil(totalCount / limit);","import axios from \"axios\";\r\n\r\nexport default class PostServise {\r\n    static async getAll(limit = 10, page = 1) {\r\n        try {\r\n            const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\r\n                params: {\r\n                    _limit: limit,\r\n                    _page: page,\r\n                }\r\n            });\r\n            return response\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    static async getById(id) {\r\n        try {\r\n            const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`);\r\n            return response\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    static async getCommentsById(id) {\r\n        try {\r\n            const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}/comments`);\r\n            return response\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Button from './UI/button/Button';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst style = {\r\n    border: \"2px solid tomato\",\r\n    color: \"tomato\"\r\n}\r\n\r\nconst PostItem = ({ post, remove }) => {\r\n    const router = useHistory();\r\n    return (\r\n        <div className=\"post__item\">\r\n            <div className=\"post__item__text\">\r\n                <strong>{post.id}. <u>{post.title}</u></strong>\r\n                <p>{post.body}</p>\r\n            </div>\r\n            <div className=\"post__btn\">\r\n                <Button onClick={() => router.push(`/posts/${post.id}`)} style={style} >Open</Button>\r\n                <Button onClick={() => remove(post)} style={style} >Delete</Button>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default PostItem;","import React from 'react';\r\nimport PostItem from './PostItem';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst PostList = ({ posts, topic, remove }) => {\r\n    return (\r\n        <div className=\"post__list\">\r\n            <h2 className=\"post__topic\">{posts.length ? topic : 'Add new Post'}</h2>\r\n            <ul>\r\n                <li className=\"post\">\r\n                    <TransitionGroup>\r\n                        {posts.map(post =>\r\n                            <CSSTransition \r\n                                key={post.id}\r\n                                timeout={500} \r\n                                classNames=\"post\">\r\n                                    <PostItem remove={remove} post={post} />\r\n                            </CSSTransition>\r\n                            )}\r\n                    </TransitionGroup>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default PostList;","import React, { forwardRef } from 'react';\r\nimport style from './Input.module.css'\r\n\r\nconst Input = forwardRef((props, ref) => {\r\n    return ( \r\n        <input ref={ref} className={style.input} {...props}/>\r\n     );\r\n})\r\n \r\nexport default Input;","import React, {useRef, useState} from 'react';\r\nimport Button from './UI/button/Button';\r\nimport Input from './UI/input/Input';\r\n\r\nconst PostForm = ({create}) => {\r\n  // const bodyInputRef = useRef();\r\n    const initialPost = { title: '', body: '' };\r\n    const [post, setPost] = useState(initialPost);\r\n    const [id, setId] = useState(1);\r\n    \r\n    const handleChange = e => {\r\n        e.currentTarget.name === 'title'\r\n        ? setPost({ ...post, title: e.currentTarget.value })\r\n        : setPost({ ...post, body: e.currentTarget.value })\r\n    }\r\n\r\n    const addNewPost = e => {\r\n        e.preventDefault();\r\n        setId(id + 1);\r\n        const newPost = { id, ...post };\r\n        create(newPost);\r\n        setPost(initialPost);\r\n        // console.log(bodyInputRef.current.value);\r\n    }\r\n    \r\n    return ( \r\n      <form className=\"form\" >\r\n        {/* unguided component */}\r\n        {/* <Input type=\"text\" placeholder='title' ref={bodyInputRef} /> */}\r\n        <Input type=\"text\" name='title' placeholder='title' value={post.title} onChange={handleChange} />\r\n        <Input type=\"text\" name='text' placeholder='text' value={post.body} onChange={handleChange} />\r\n        <Button type='submit' onClick={addNewPost} >Add</Button>\r\n      </form>\r\n     );\r\n}\r\n \r\nexport default PostForm;","import React from 'react';\r\nimport style from './Select.module.css'\r\n\r\nconst Select = ({options, defaultValue, value, onChange}) => {\r\n    return ( \r\n        <select\r\n            value={value}\r\n            onChange={e => onChange(e.target.value)}\r\n            className={style.select}\r\n        >\r\n            <option disabled value=\"\">{defaultValue}</option>\r\n            {options.map(option =>\r\n                <option key={option.value} value={option.value}>{option.name}</option>)}\r\n        </select>\r\n    );\r\n}\r\n \r\nexport default Select;","import React from 'react';\r\nimport Input from './UI/input/Input';\r\nimport Select from './UI/select/Select';\r\n\r\nconst PostFilter = ({filter, setFilter}) => {\r\n    return (\r\n        <div className=\"post__filter\">\r\n            <Input\r\n                value={filter.query}\r\n                onChange={e=>setFilter({...filter, query: e.target.value})}\r\n                placeholder='Search' />\r\n            <Select\r\n                value={filter.sort}\r\n                defaultValue='Sort by:'\r\n                onChange={selectedSort=>setFilter({...filter, sort:selectedSort})}\r\n                options={[\r\n                { value: 'id', name: 'by id' },\r\n                { value: 'title', name: 'by title' },\r\n                { value: 'body', name: 'by description' }\r\n                ]}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default PostFilter;","import React from 'react';\r\nimport style from './Modal.module.css';\r\n\r\nconst Modal = ({ children, visible, setVisible }) => {\r\n    const rootClasses = [style.Modal__backdrop]\r\n\r\n    if (visible) {\r\n        rootClasses.push(style.active);\r\n    }\r\n    return ( \r\n        <div className={rootClasses.join(' ')} onClick={() => setVisible(false)} >\r\n            <div className={style.Modal__content} onClick={(e) => e.stopPropagation()} >\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Modal;","import React from 'react';\r\nimport style from './Loader.module.css';\r\n\r\nconst Loader = () => {\r\n    return ( \r\n        <div className={style.loader} >\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Loader;","import React from 'react';\r\nimport { usePagination } from '../../../hooks/usePagination';\r\n\r\nconst Pagination = ({ totalPages, page, changePages }) => {\r\n    const pagesArray = usePagination(totalPages);\r\n    \r\n    return ( \r\n        <div className='paginations_block'>\r\n            {pagesArray.map(p =>\r\n            <span\r\n                key={p}\r\n                className={page === p ? 'page page_current' : 'page'}\r\n                onClick={() => changePages(p)} >\r\n                {p}\r\n            </span>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Pagination;","import { useMemo } from 'react';\r\n\r\nexport const usePagination = totalPages => {\r\n    const pages = useMemo(() => {\r\n        const result = [];\r\n        for (let i = 0; i < totalPages; i++) {\r\n            result.push(i + 1)\r\n        }\r\n        return result\r\n    }, [totalPages])\r\n    return pages\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { usePosts } from '../hooks/usePosts';\r\nimport { useFetching } from '../hooks/useFetching';\r\nimport { getPageCount } from '../utils/pages';\r\nimport {useObserver} from '../hooks/useObserver';\r\nimport PostServise from '../API/PostServise';\r\nimport '../styles/App.css';\r\n\r\nimport PostList from '../components/PostList';\r\nimport PostForm from '../components/PostForm';\r\nimport PostFilter from '../components/PostFilter';\r\nimport Modal from '../components/UI/modal/Modal';\r\nimport Button from '../components/UI/button/Button';\r\nimport Loader from '../components/UI/loader/Loader';\r\nimport Pagination from '../components/UI/pagination/Pagination';\r\nimport Select from '../components/UI/select/Select';\r\n\r\nconst style = {\r\n  btn_add: {\r\n    margin: \"20px auto\",\r\n    border: \"2px solid teal\"\r\n  },\r\n}\r\n\r\nfunction Post() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [filter, setFilter] = useState({ sort: '', query: '' });\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const lastElem = useRef();\r\n\r\n  \r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, [page, limit])\r\n  \r\n  const createPost = newPost => {\r\n    setPosts([...posts, newPost]);\r\n    setModal(false);\r\n  };\r\n  const removePost = remPost => setPosts(posts.filter(p => p.id !== remPost.id));\r\n  \r\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\r\n  const [fetchPosts, loader, postErr] = useFetching(async() => {\r\n    const response = await PostServise.getAll(limit, page);\r\n    setPosts([...posts, ...response.data]);\r\n    const totalCount = response.headers['x-total-count'];\r\n    setTotalPages(getPageCount(totalCount, limit));\r\n  })\r\n  \r\n  const changePages = page => setPage(page);\r\n  useObserver(lastElem, page < totalPages, loader, () => { setPage(page + 1) });\r\n \r\n  return (\r\n    <div className=\"App\">\r\n      <Button onClick={fetchPosts} >Get posts</Button>\r\n      <Button onClick={() => setModal(true)} style={style.btn_add} >\r\n        Add new Post\r\n      </Button>\r\n      <Modal visible={modal} setVisible={setModal} >\r\n        <PostForm create={createPost} />\r\n      </Modal>\r\n      <PostFilter filter={filter} setFilter={setFilter} />\r\n      <Select\r\n        value={limit}\r\n        defaultValue='Elements on page'\r\n        onChange={value => setLimit(value)}\r\n        options={[\r\n          { value: 5, name: '5' },\r\n          { value: 10, name: '10' },\r\n          { value: 15, name: '15' },\r\n          { value: -1, name: 'all' },\r\n        ]}\r\n      />\r\n      {postErr && <h2>Error: {postErr}</h2> }\r\n      {loader && <Loader /> }\r\n      <PostList remove={removePost} posts={sortedAndSearchedPosts} topic='Post List' />\r\n      <div ref={lastElem} />\r\n      <Pagination totalPages={totalPages} page={page} changePages={changePages} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React, { useState } from 'react';\r\nimport Button from './UI/button/Button';\r\n\r\nconst Counter = () => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  function increment() {\r\n    setCount(count + 1)\r\n  }\r\n\r\n  function decrement() {\r\n    setCount(count - 1)\r\n  }\r\n\r\n  return (\r\n    <div className='counter'>\r\n      <Button onClick={increment} >Increment</Button>\r\n      <h2>{count}</h2>\r\n      <Button onClick={decrement} >Decrement</Button>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Counter;\r\n","import React from 'react';\r\n\r\nconst PostComments = ({comments}) => {\r\n    return ( \r\n        <div className='post__comment' >\r\n            {comments.map(comment =>\r\n                <div className='post__comm_item' key={comment.id} >\r\n                    <h4>{comment.email}</h4>\r\n                    <h5>{comment.name}</h5>\r\n                    <p>{comment.body}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default PostComments;","import PostsPage from '../pages/PostsPage';\r\nimport CounterPage from '../pages/CounterPage';\r\nimport ErrorPage from '../pages/ErrorPage';\r\nimport PostIdPage from '../pages/PostIdPage';\r\nimport Login from '../pages/Login';\r\n\r\n\r\nexport const privateRoutes = [\r\n    {path: \"/posts\", component: PostsPage, exact: true},\r\n    {path: \"/posts/:id\", component: PostIdPage, exact: true},\r\n]\r\n\r\nexport const publicRoutes = [\r\n    {path: \"/login\", component: Login, exact: true},\r\n    {path: \"/count\", component: CounterPage, exact: false},\r\n    {path: \"/error\", component: ErrorPage, exact: false},\r\n]","import { useEffect, useRef } from 'react';\r\n\r\nexport const useObserver = (ref, canLoad, isLoading, callback) => {\r\n    const observer = useRef();\r\n\r\n  useEffect(() => {\r\n    if (isLoading) return;\r\n    if (observer.current) observer.current.disconnect();\r\n    const cb = function (entries, observer) {\r\n      if (entries[0].isIntersecting && canLoad) {\r\n        callback();\r\n      }\r\n    }\r\n    observer.current = new IntersectionObserver(cb);\r\n    observer.current.observe(ref.current);\r\n  }, [isLoading])\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useFetching } from '../hooks/useFetching';\r\nimport '../styles/App.css';\r\nimport PostService from '../API/PostServise';\r\nimport PostComments from '../components/PostComments';\r\nimport Loader from '../components/UI/loader/Loader';\r\n\r\nconst PostIdPage = () => {\r\n    const params = useParams();\r\n    const [post, setPost] = useState({});\r\n    const [comments, setComments] = useState([]);\r\n\r\n    const [fetchPostById, isLoading, error] = useFetching(async () => {\r\n        const response = await PostService.getById(params.id)\r\n        setPost(response.data);\r\n    })\r\n\r\n    const [fetchComments, isCommentLoading, CommentError] = useFetching(async () => {\r\n        const resp = await PostService.getCommentsById(params.id)\r\n        setComments(resp.data)\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchPostById()\r\n        fetchComments()\r\n    }, [])\r\n\r\n    return ( \r\n        <div className='post__id_page' >\r\n            <h2>This is {params.id} Post Page</h2>\r\n            {isLoading\r\n                ? <Loader/>\r\n                : <h3>{post.title}</h3>\r\n            }\r\n            <h3><u>Comments:</u></h3>\r\n            {isCommentLoading\r\n                ? <Loader />\r\n                : <PostComments comments={comments} />\r\n            }\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default PostIdPage;","import React, { useContext } from 'react';\r\nimport Input from '../components/UI/input/Input';\r\nimport Button from '../components/UI/button/Button';\r\nimport {AuthContext} from '../context';\r\n\r\nconst Login = () => {\r\n    const { isAuth, setIsAuth } = useContext(AuthContext);\r\n    \r\n    const login = e => {\r\n        e.preventDefault();\r\n        setIsAuth(true);\r\n        localStorage.setItem('auth', 'true')\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <h1>Login Page</h1>\r\n            <form onSubmit={login} >\r\n                <Input\r\n                    type=\"text\"\r\n                    name='name'\r\n                    placeholder='Your Name'\r\n                    // value={}\r\n                    // onChange={handleChange}\r\n                />\r\n                <Input\r\n                    type=\"password\"\r\n                    name='password'\r\n                    placeholder='Your Password'\r\n                    // value={}\r\n                    // onChange={handleChange}\r\n                />\r\n                <Button>Enter</Button>\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Login;","import React from 'react';\r\nimport Counter from '../components/Counter'\r\n\r\nconst CounterPage = () => {\r\n    return ( \r\n        <Counter />\r\n     );\r\n}\r\n \r\nexport default CounterPage;","import React from 'react';\r\n\r\nconst ErrorPage = () => {\r\n    return ( \r\n        <h1>This page is not found. Error 404</h1>\r\n     );\r\n}\r\n \r\nexport default ErrorPage;","import React, { useContext } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { privateRoutes, publicRoutes } from '../routes';\r\nimport {AuthContext} from '../context';\r\nimport Loader from './UI/loader/Loader';\r\n\r\nconst AppRouter = () => {\r\n  const { isAuth, isLoading } = useContext(AuthContext);\r\n\r\n  if (isLoading) {\r\n    return <Loader/>\r\n  }\r\n\r\n  return ( \r\n      isAuth\r\n        ? <Switch>\r\n            {privateRoutes.map(r =>\r\n              <Route key={r.path} component={r.component} path={r.path} exact={r.exact} />\r\n            )}\r\n            <Redirect to=\"/posts\" />\r\n          </Switch>\r\n        : <Switch>\r\n          {publicRoutes.map(r =>\r\n            <Route key={r.path} component={r.component} path={r.path} exact={r.exact} />\r\n          )}\r\n          <Redirect to=\"/login\" />\r\n        </Switch>\r\n\r\n     );\r\n}\r\n \r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport {BrowserRouter } from 'react-router-dom';\nimport './styles/App.css';\n\nimport Navbar from './components/UI/navbar/Navbar';\nimport AppRouter from './components/AppRouter';\nimport {AuthContext} from './context';\n\nfunction App() {\n  const [isAuth, setIsAuth] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (localStorage.getItem('auth')) {\n      setIsAuth(true);\n    }\n    setIsLoading(false);\n  },[])\n \n  return (\n    <AuthContext.Provider value={{\n      isAuth,\n      setIsAuth,\n      setIsLoading\n    }} >\n      <BrowserRouter>\n        <Navbar />\n        <AppRouter />\n      </BrowserRouter>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}